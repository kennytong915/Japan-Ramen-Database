# Database Configuration
SPRING_DATASOURCE_URL=jdbc:mysql://localhost:3306/ramen_directory?createDatabaseIfNotExist=true&useSSL=false&allowPublicKeyRetrieval=true
SPRING_DATASOURCE_USERNAME=root
SPRING_DATASOURCE_PASSWORD=your_local_database_password_here

# Docker Database Configuration
DOCKER_DATASOURCE_URL=jdbc:mysql://mysql:3306/ramen_directory?createDatabaseIfNotExist=true&useSSL=false&allowPublicKeyRetrieval=true

# MySQL Docker Configuration
MYSQL_ROOT_PASSWORD=your_secure_mysql_root_password_here
MYSQL_DATABASE=ramen_directory
MYSQL_USER=ramen_user
MYSQL_USER_PASSWORD=your_secure_mysql_user_password_here
MYSQL_ROOT_USERNAME=root

# Admin user initialization
ADMIN_USERNAME=admin
ADMIN_EMAIL=admin@example.com
ADMIN_PASSWORD=your_secure_admin_password_here

# reCAPTCHA configuration (Production)
GOOGLE_RECAPTCHA_KEY_SITE=your_production_recaptcha_site_key_here
GOOGLE_RECAPTCHA_KEY_SECRET=your_production_recaptcha_secret_key_here

# reCAPTCHA configuration (Docker/Test)
DOCKER_RECAPTCHA_KEY_SITE=your_test_recaptcha_site_key_here
DOCKER_RECAPTCHA_KEY_SECRET=your_test_recaptcha_secret_key_here

# AWS S3 Configuration (Production)
AWS_S3_BUCKET_NAME=your_s3_bucket_name
AWS_S3_REGION=your_aws_region
AWS_S3_ACCESS_KEY=your_production_aws_access_key
AWS_S3_SECRET_KEY=your_production_aws_secret_key

# AWS S3 Configuration (Docker/Test)
DOCKER_AWS_S3_ACCESS_KEY=your_test_aws_access_key
DOCKER_AWS_S3_SECRET_KEY=your_test_aws_secret_key

# JWT Configuration
APP_SECURITY_JWT_EXPIRATION=86400000

# Pagination Configuration
APP_PAGINATION_DEFAULT_PAGE_SIZE=20

# Cache Configuration
APP_SERVICE_CACHE_TTL=3600

# Security Configuration
SECURITY_MAX_FAILED_ATTEMPTS=5
SECURITY_LOCK_TIME_DURATION=15

# Rate Limiting Configuration
RATE_LIMIT_CAPACITY=5
RATE_LIMIT_REFILL=10
COMMENT_RATE_LIMIT_CAPACITY=10
COMMENT_RATE_LIMIT_REFILL=5

# File Upload Configuration
SPRING_SERVLET_MULTIPART_MAX_FILE_SIZE=10MB
SPRING_SERVLET_MULTIPART_MAX_REQUEST_SIZE=10MB

# Comment Configuration
APP_COMMENT_MAX_PHOTOS=7
APP_COMMENT_ALLOWED_CONTENT_TYPES=image/jpeg,image/png,image/jpg

# Server Configuration
SERVER_PORT=8080

# Logging Configuration
LOGGING_LEVEL_ROOT=INFO
LOGGING_LEVEL_ORG_SPRINGFRAMEWORK_WEB=INFO
LOGGING_LEVEL_ORG_HIBERNATE=ERROR
LOGGING_LEVEL_COM_RAMENDIRECTORY=DEBUG
LOGGING_LEVEL_COM_RAMENDIRECTORY_JAPANRAMENDIRECTORY_CONFIG_RATELIMITCONFIG=INFO
LOGGING_LEVEL_COM_RAMENDIRECTORY_JAPANRAMENDIRECTORY_CONFIG_COMMENTRATELIMITCONFIG=INFO
LOGGING_LEVEL_COM_RAMENDIRECTORY_JAPANRAMENDIRECTORY_CONTROLLER_USERCONTROLLER=INFO
LOGGING_LEVEL_COM_RAMENDIRECTORY_JAPANRAMENDIRECTORY_CONTROLLER_COMMENTCONTROLLER=INFO
LOGGING_LEVEL_COM_RAMENDIRECTORY_JAPANRAMENDIRECTORY_SERVICE_CONTENTFILTERSERVICE=INFO
LOGGING_LEVEL_COM_RAMENDIRECTORY_JAPANRAMENDIRECTORY_SERVICE_USERSERVICEIMPL=INFO
LOGGING_LEVEL_COM_RAMENDIRECTORY_JAPANRAMENDIRECTORY_SERVICE_COMMENTSERVICEIMPL=INFO

# Docker Logging Configuration
DOCKER_LOGGING_LEVEL_COM_RAMENDIRECTORY=INFO

# CORS Configuration for Docker
SPRING_WEB_CORS_ALLOWED_ORIGINS=http://localhost:3000,http://frontend:80
SPRING_WEB_CORS_ALLOWED_METHODS=GET,POST,PUT,DELETE,OPTIONS
SPRING_WEB_CORS_ALLOWED_HEADERS=*
SPRING_WEB_CORS_ALLOW_CREDENTIALS=true

# =============================================================================
# IMPORTANT: Replace all placeholder values with your actual credentials
# =============================================================================
# 
# To use this template:
# 1. Copy this file to .env: cp .env_example .env
# 2. Replace all placeholder values with your real credentials
# 3. Never commit the .env file to version control
# 4. Keep your .env file secure and private
#
# For reCAPTCHA keys, visit: https://www.google.com/recaptcha/admin
# For AWS credentials, visit: https://console.aws.amazon.com/iam/
# For MySQL passwords, use strong, unique passwords
# =============================================================================
